{"version":3,"file":"icon.component.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/icon/icon.component.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnChanges,\n  OnInit,\n  Renderer2,\n} from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { NbIconLibraries } from './icon-libraries';\n\n/**\n * Icon component. Allows to render both `svg` and `font` icons.\n * Starting from Nebular 4.0 uses [Eva Icons](https://akveo.github.io/eva-icons/) pack by default.\n *\n * Basic icon example:\n * @stacked-example(Showcase, icon/icon-showcase.component)\n *\n * Icon configuration:\n *\n * ```html\n * <nb-icon icon=\"star\"></nb-icon>\n * ```\n * ### Installation\n *\n * By default Nebular comes without any pre-installed icon pack.\n * Starting with Nebular 4.0.0 we ship separate package called `@nebular/eva-icons`\n * which integrates SVG [Eva Icons](https://akveo.github.io/eva-icons/) pack to Nebular. To add it to your\n * project run:\n * ```sh\n * npm i @nebular/eva-icons\n * ```\n * This command will install Nebular Eva Icons pack. Then register `NbEvaIconsModule` into your app module or any child\n * module you need to have the icons in:\n * ```ts\n * import { NbEvaIconsModule } form '@nebular/eva-icons';\n *\n * @NgModule({\n *   imports: [\n *   \t// ...\n *     NbEvaIconsModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * Last thing, import `NbIconModule` to your feature module where you need to show an icon:\n * ```ts\n * @NgModule({\n *   imports: [\n *   \t// ...\n *     NbIconModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Icon can be colored using `status` input:\n * ```html\n * <nb-icon icon=\"star\" status=\"warning\"></nb-icon>\n * ```\n *\n * Colored icons:\n * @stacked-example(Colored Icons, icon/icon-colors.component)\n *\n * In case you need to specify an icon from a specific icon pack, this could be done using `pack` input property:\n * ```html\n * <nb-icon icon=\"star\" pack=\"font-awesome\"></nb-icon>\n * ```\n * Additional icon settings (if available by the icon pack) could be passed using `options` input:\n *\n * ```html\n * <nb-icon icon=\"star\" [options]=\"{ animation: { type: 'zoom' } }\"></nb-icon>\n * ```\n *\n * @styles\n *\n * icon-font-size:\n * icon-width:\n * icon-height:\n * icon-primary-fg:\n * icon-info-fg:\n * icon-success-fg:\n * icon-warning-fg:\n * icon-danger-fg:\n */\n@Component({\n  selector: 'nb-icon',\n  styleUrls: [`./icon.component.css`],\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NbIconComponent implements OnChanges, OnInit {\n\n  static readonly STATUS_PRIMARY = 'primary';\n  static readonly STATUS_INFO = 'info';\n  static readonly STATUS_SUCCESS = 'success';\n  static readonly STATUS_WARNING = 'warning';\n  static readonly STATUS_DANGER = 'danger';\n\n  private iconDef;\n  private prevClasses = [];\n\n  @HostBinding('innerHtml')\n  html: SafeHtml;\n\n  @HostBinding('class.primary-icon')\n  get primary() {\n    return this.status === NbIconComponent.STATUS_PRIMARY;\n  }\n\n  @HostBinding('class.info-icon')\n  get info() {\n    return this.status === NbIconComponent.STATUS_INFO;\n  }\n\n  @HostBinding('class.success-icon')\n  get success() {\n    return this.status === NbIconComponent.STATUS_SUCCESS;\n  }\n\n  @HostBinding('class.warning-icon')\n  get warning() {\n    return this.status === NbIconComponent.STATUS_WARNING;\n  }\n\n  @HostBinding('class.danger-icon')\n  get danger() {\n    return this.status === NbIconComponent.STATUS_DANGER;\n  }\n\n  /**\n   * Icon name\n   * @param {string} status\n   */\n  @Input() icon: string;\n\n  /**\n   * Icon pack name\n   * @param {string} status\n   */\n  @Input() pack: string;\n\n  /**\n   * Additional icon settings\n   * @param {[name: string]: any}\n   */\n  @Input() options: { [name: string]: any };\n\n  /**\n   * Icon status (adds specific styles):\n   * primary, info, success, warning, danger\n   * @param {string} status\n   */\n  @Input() status: string;\n\n  constructor(\n    private sanitizer: DomSanitizer,\n    private iconLibrary: NbIconLibraries,\n    private el: ElementRef,\n    private renderer: Renderer2,\n  ) {}\n\n  ngOnInit() {\n    this.iconDef = this.renderIcon(this.icon, this.pack, this.options);\n  }\n\n  ngOnChanges() {\n    if (this.iconDef) {\n      this.iconDef = this.renderIcon(this.icon, this.pack, this.options);\n    }\n  }\n\n  renderIcon(name: string, pack?: string, options?: { [name: string]: any }) {\n    const iconDefinition = this.iconLibrary.getIcon(name, pack);\n\n    const content = iconDefinition.icon.getContent(options);\n    if (content) {\n      this.html = this.sanitizer.bypassSecurityTrustHtml(content);\n    }\n\n    this.assignClasses(iconDefinition.icon.getClasses(options));\n    return iconDefinition;\n  }\n\n  protected assignClasses(classes: string[]) {\n    this.prevClasses.forEach((className: string) => {\n      this.renderer.removeClass(this.el.nativeElement, className);\n    });\n\n    classes.forEach((className: string) => {\n      this.renderer.addClass(this.el.nativeElement, className);\n    });\n\n    this.prevClasses = classes;\n  }\n}\n"]}